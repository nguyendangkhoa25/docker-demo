node {
   // job
  try {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
   }
    stage('Test') {
      println('A test has failed!')
      sh 'exit 1'
    }
  
   stage('docker build/push') {            
     docker.withRegistry('https://index.docker.io/v1/', 'nguyendangkhoa25-dockerhub') {
       def app = docker.build("nguyendangkhoa25/docker-nodejs-demo:${commit_id}", '.').push()
     }                                     
   }
     } catch(e) {
    // mark build as failed
    currentBuild.result = "FAILURE";

    // send slack notification
    slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

    // throw the error
    throw e;
  }
}                                          
